##################################
#  ____________________________
# (   _________________________)
#  ) (__  _  _  _    _
# (   __)( \/ )( \/\/ )/\/\
#  ) (    \  /  \    //    \
# (___)    \/    \/\/(_/\/\_)
#
#the seafer fvwm2rc
#this fvwm2rc is dedicated to nightslayer420 and swawesome95
#who wanted something to rip components out of but couldn't find
#anything to their liking. it's over-commented to act as a semi-
#educational tool for anyone looking to make their own.

#env variables
#these are little keywords I can use to reference files and programs
SetEnv fvwm_home /home/jack/
SetEnv fvwm_wallpapers $[fvwm_home]Pictures/papes/
SetEnv fvwm_term /usr/bin/urxvt
SetEnv fvwm_video_player /usr/bin/vlc
SetEnv fvwm_icon /usr/share/icons/GNUstep/
SetEnv fvwm_sounds $[fvwm_home]Music/sounds/
#where to look for icons and images
ImagePath $[fvwm_icon]:$[fvwm_icon];.png:$[fvwm_wallpapers]:+

#desks and pages
#in fvwm, pages are akin to workspaces, and desks are like meta-workspaces
#because this is too complex for my use case, I limit myself to 1 desk and
#9 pages, basically giving myself a simple 9 workspace setup
#the desktopname WILL be visible on the FvwmPager, so give it a tolerable
#name, you'll be looking at it almost constantly.
DesktopSize 3x3
DesktopName 0 FVWM2
#these parameters control the ability to switch between pages by dragging
#your cursor to the edge of the screen. I find this feature annoying so my
#parameters here effectively disable it
EdgeScroll 0 0
EdgeThickness 0

#mouse and focus settings
#number of ms to hold down the mouse button to be considered "holding down
#the mouse button"
ClickTime 350
#number of pixels the cursor must move before it's considered "moving"
#(isn't this precise customization?)
MoveThreshold 3
#this style argument tells fvwm to give focus to windows i click on, and raise them
#to the top of the screen. the last one in particular specifies clicking on a window
#"icon" which is the minimized manifestation of a window.
Style * SloppyFocus, FPClickRaisesFocused, FPClickDecorRaisesFocused, FPClickIconRaisesFocused

#colorsets
#THEME: the absolute slate [48]
#0 Master titlebar (active window, menus, fvwmpager, system tray)
#1 Slave titlebar (inactive window, other menus, system tray alt)
#2 Master window border
#3 Slave window border
#4 Master item (menus normal item, fvwmiconman icon/iconified, fvwmpager icon/balloon)
#5 Slave item (menus highlighted item, fvwmiconman highlighted icon/iconified, fvwmpager active icon)
#6 Slave item II (menus grayed item, fvwmiconman active icon, fvwmpager background)
###OPTIONAL SETS (provides the ability to have unique colorsets for menus and panels)
###10 SERIES REFERENCED BY WINDOWOPS AND SENDMENU
#10 Alternative master item 
#11 Alternative slave item
#12 Alternative slave item II
#13 Alternative titlebar
###20 SERIES REFERENCED BY WINDOWLIST
#20 Alternative II master item
#21 Alternative II slave item
#22 Alternative II slave item II
#23 Alternative titlebar II
#30 Alternative III master item
#31 Alternative III slave item
#32 Alternative III slave item II
#33 Alternative titlebar III
#SetEnv: "Colorset" containing fg and bg colors for xapps
Colorset 0	fg gray12, bg gray60
Colorset 1	fg gray40, bg gray24
Colorset 2	fg gray60, bg gray12
Colorset 3	fg gray24, bg gray40
Colorset 4	fg gray30, bg gray12
Colorset 5	fg gray12, bg gray30
Colorset 6	fg gray44, bg gray44
Colorset 10	fg gray33, bg gray71
Colorset 11	fg gray71, bg gray33
Colorset 12	fg gray44, bg gray44
Colorset 13	fg gray40, bg gray24
Colorset 20	fg gray33, bg gray71
Colorset 21	fg gray33, bg gray71
Colorset 22	fg gray44, bg gray44
Colorset 23	fg gray40, bg gray24
Colorset 30	fg gray30, bg gray12
Colorset 31	fg gray12, bg gray30
Colorset 32	fg gray44, bg gray44
Colorset 33	fg gray40, bg gray24
SetEnv xfg	gray12
SetEnv xbg	gray60

#aplication specific styling
#tinyTerm is a bash script i use to launch a custom terminal with a tiny little font
#for single command use (spawned in StartFunction)
Style "tinyTerm" NoTitle, !Handles, Sticky, StaysOnBottom, FixedPosition, FixedSize \
	!Iconifiable

#window styling
#setting padding for maximized windows so they dont cover important elements
EwmhBaseStruts 141 2 2 2
#ignoring the numlock modifier (its annoying)
IgnoreModifiers L25
#placing new windows in empty space, or falling back to a cascading fashion of placement
#disallowing new windows to grab focus
Style * TileCascadePlacement, GrabFocusOff
#ignore the program specified start position for new windows (usually really autistic)
#shows resizing of windows as it happens instead of using an outline
Style * NoUsePPosition, ResizeOpaque
#max size a window should be moved without being made into an outline (for weak machines)
OpaqueMoveSize -1
#always display the cute litte window in the top left that tells you your current 
#window geometry
HideGeometryWindow Never
#lets windows stick together when moved or resized within x pixels of each other.
#only windows for me, and also for the edges of the screen.
SnapAttraction 3 Windows Screen
#give transient windows basic things like title bars, and defines some sane behaviors for them
Style * DecorateTransient, DontRaiseTransient, DontLowerTransient, StackTransientParent, GrabFocusTransientOff
#removes the minimized "icon" versions of windows (annoying)
Style * NoIcon
#window decorations
DestroyDecor winDecor
AddToDecor winDecor
#a titlebar with no buttons, a left justified title, at 20 pixels in height
+ TitleStyle LeftJustified Height 20
+ BorderStyle Active Raised
+ BorderStyle Inactive Flat
#window style commands
Style "*" UseDecor winDecor
Style "*" Font "xft:SF Pro Display:style=Heavy Italic:size=10:minspace=False:antialias=True"
Style "*" BorderWidth 4
#handles are that pair of lines that appear as the outline of the corner of the
#window border. i think they're ugly and this argument removes them
Style "*" !Handles
Style "*" Colorset 0
Style "*" HilightColorset 1
Style "*" BorderColorset 3
Style "*" HilightBorderColorset 4
#disables that weird sunken effect on the borders
Style "*" FirmBorder, FvwmBorder

#functions
#the autostart function, basically tells fvwm what it should do when it starts. for me its:
#>the pager
#>the icon manager
#>my system tray
#>a useful tiny terminal
#>a startup sound (cute!)
#>my wallpaper (set with feh instead of fvwm-root)
#>sourcing my .Xresources
#>turning on my compositor
DestroyFunc StartFunction
AddToFunc StartFunction
+ I Module FvwmPager *
+ I Module FvwmIconMan
+ I Module FvwmButtons sysTray
+ I Exec exec tinyTerm
+ I Exec exec cvlc $[fvwm_sounds]startup.ogg
+ I Exec exec ~/.fehbg &
+ I Exec exec xrdb .Xresources
+ I Exec exec picom
#to be honest i dont know the difference between InitFunction and StartFunction, things i want
#to happen when fvwm starts don't happen correctly (or at all) when i add them to InitFunction,
#but they do happen correctly when added to StartFunction. someone smarter than me can solve
#this conundrum, but i have InitFunction here anyway as a holdover.
DestroyFunc InitFunction
AddToFunc InitFunction
+ I Nop
#restart function that does nothing special
DestroyFunc RestartFunction
AddToFunc RestartFunction
+ I Nop
#functions to take screenshots using imagemagick
#entire screen
DestroyFunc rootScreenshot
AddToFunc rootScreenshot
+ I Exec import -window root -quality 100 -silent \
	"$[fvwm_home]/Pictures/scrot/scrot-`date +%F[%R]`.jpg"
#selected area
DestroyFunc dragScreenshot
AddToFunc dragScreenshot
+ I Exec import -quality 100 -silent \
	"$[fvwm_home]/Pictures/scrot/scrot-`date +%F[%R]`.jpg"
#current window
DestroyFunc windowScreenshot
AddToFunc windowScreenshot
+ I ThisWindow (!Shaded !Iconic Iconifiable) \
	Exec import -window $[w.id] -quality 100 -silent \
		"$[fvwm_home]/Pictures/scrot/scrot-`date +%F[%R]`-$[w.id].jpg"
#function to make an invasion of bugs!
DestroyFunc screenBugs
AddToFunc screenBugs
+ I Exec exec xroach -roaches 20 -rc Brown -speed 0.2
+ I Exec exec xroach -roaches 10 -rc Black -speed 0.4
#function for when the bugs aren't fun anymore
DestroyFunc squashBugs
AddToFunc sqaushBugs
+ I Exec killall xroach

#bindings
#mouse bindings for window management. I have deliberately neglected to have buttons
#on the titlebar for aesthetic purposes, and as it turns out this creates a functionality
#that is actually faster (with practice) than title bar buttons.
#left clicking on the title bar will let you move the window
Mouse 	1 	T 	A 	Move
#right clicking on the title bar will iconify and deiconify the window
Mouse	3	T	A	Iconify
#scroll clicking on the title bar will close the window. when holding shift, it will force
#the window shut instead of sending a close request.
Mouse	2	T	N	Delete
Mouse	2	T	S	Destroy
#scrolling up on the window will maximize it, and scrolling down will unmaximize it.
Mouse	4	T	N	Maximize True
Mouse	5	T	N	Maximize False
#left clicking on the border of a window will resize it.
Mouse	1	SF	A	Resize
#THE FOLLOWING BINDINGS WILL ONLY WORK ON A 1080P MONITOR AND ARE COMPLIANT WITH MY
#ENHANCED WM HINTS BASE WORKING AREA!!!
#shift+upscroll will tile the window to the left 2/3rds of the screen, downscroll for
#the right 2/3rds of the screen
Mouse	4	T	S	ResizeMove 1155p 1048p 0 0
Mouse	5	T	S	ResizeMove 1155p 1048p -0 0
#ctrl+upscroll will tile the window to the left 1/3rd of the screen, downscroll for
#the right 1/3rd of the screen
Mouse	4	T	C	ResizeMove 601p 1048p 0 0
Mouse	5	T	C	ResizeMove 601p 1048p -0 0
#alt+upscroll will tile the window to the left half of the screen, downscroll for
#the right half of the screen
Mouse	4	T	M	Resizemove 878p 1048p 0 0
Mouse	5	T	M	Resizemove 878p 1048p -0 0

#key binding for creating the "alt-tab" window switching feature with a list (we
#will theme the list later)
Key	Tab	A	M	WindowList Root c c NoDeskSort, SelectOnRelease Meta_L
#bindings for my screenshot functions
Key	Print	A	N	rootScreenshot
Key	Print	A	S	windowScreenshot
Key	Print	A	C	dragScreenshot
#keybindings to open various useful programs on the fly
#terminal
Key	T	A 	M	$[fvwm_term]
#open context menus for the root window
Mouse	1	R	A	Menu rootMenu
Mouse	3	R	A	Menu winOpMenu

#menus
#rootMenu colors
MenuStyle "rootMenu"	MenuColorset 4
MenuStyle "rootMenu"	ActiveColorset 5
MenuStyle "rootMenu"	TitleColorset 0
MenuStyle "rootMenu"	GreyedColorset 6
#subMenu colors, inverse of rootMenu
MenuStyle "subMenu"	MenuColorset 5
MenuStyle "subMenu"	ActiveColorset 4
MenuStyle "subMenu"	GreyedColorset 6
#winOpMenu colors
MenuStyle "winOpMenu"	MenuColorset 10
MenuStyle "winOpMenu"	ActiveColorset 11
MenuStyle "winOpMenu"	TitleColorset 13
MenuStyle "winOpMenu"	GreyedColorset 12
#sendMenu colors, inverse of winOpMenu
MenuStyle "sendMenu"	MenuColorset 11
MenuStyle "sendMenu"	ActiveColorset 10
MenuStyle "sendMenu"	GreyedColorset 12
#WindowList colors (alt-tab window switching menu)
MenuStyle "WindowList"	MenuColorset 20
MenuStyle "WindowList"	TitleColorset 23
MenuStyle "WindowList"	ActiveColorset 21
MenuStyle "WindowList"	GreyedColorset 22
#menu parameters... because I wanted each menu to have it's own colorscheme, each menu must
#also have it's own MenuStyle. Because each menu has it's own MenuStyle, I have to duplicate
#these commands for each MenuStyle. Fun! The good news is that this gives me control over 
#which menus have which styles, which is always nice.
#menus font and menus title font
MenuStyle "rootMenu" 	Font "xft:SF Pro Display:style=Light Italic:size=9:minspace=True:antialias=True"
MenuStyle "winOpMenu"	Font "xft:SF Pro Display:style=Light Italic:size=9:minspace=True:antialias=True"
MenuStyle "sendMenu"	Font "xft:SF Pro Display:style=Light Italic:size=9:minspace=True:antialias=True"
MenuStyle "WindowList"	Font "xft:SF Pro Display:style=Light Italic:size=9:minspace=True:antialias=True"
MenuStyle "subMenu"	Font "xft:SF Pro Display:style=Light Italic:size=9:minspace=True:antialias=True"
MenuStyle "rootMenu"	TitleFont "xft:SF Pro Display:style=Semibold Italic:size=10:minspace=True:antialias=True"
MenuStyle "winOpMenu"	TitleFont "xft:SF Pro Display:style=Semibold Italic:size=10:minspace=True:antialias=True"
MenuStyle "WindowList"	TitleFont "xft:SF Pro Display:style=Semibold Italic:size=10:minspace=True:antialias=True"
#forces the cursor to hover over the item for a while (300ms) before it popped up
MenuStyle "rootMenu"	PopupDelayed, PopupDelay 300, PopdownImmediately
MenuStyle "winOpMenu"	PopupDelayed, PopupDelay 300, PopdownImmediately
#determines where submenus appear relative to menu items
MenuStyle "rootMenu"	PopupOffset -5 100, TitleWarpOff
MenuStyle "winOpMenu"	PopupOffset -5 100, TitleWarpOff
#changes the appearance of the title bar, item separators, and submenu triangles
MenuStyle "rootMenu"	TitleUnderlines2, SeparatorsLong, TrianglesRelief, BorderWidth 2
MenuStyle "winOpMenu"	TitleUnderlines2, SeparatorsLong, TrianglesRelief, BorderWidth 2
MenuStyle "sendMenu"	SeparatorsLong, BorderWidth 2
MenuStyle "WindowList"	TitleUnderlines2, SeparatorsLong, BorderWidth 2
MenuStyle "subMenu"	SeparatorsLong, BorderWidth 2
#hold menus open when submenus open to prevent navigating to 4 submenus only to have the whole
#structure close on you because you moved your mouse 2 pixels too far over
MenuStyle "rootMenu"	PopupAsSubmenu, HoldSubmenus, SubmenusRight
MenuStyle "winOpMenu"	PopupAsSubmenu, HoldSubmenus, SubmenusRight
#determines the structure of each part of a menu item from the title, icon, etc.
#my structure basically removes everything except for text.
MenuStyle "rootMenu"	ItemFormat "%|%l%p%>%|"
MenuStyle "winOpMenu"	ItemFormat "%|%l%p%>%|"
MenuStyle "sendMenu"	ItemFormat "%|%l%p%>%|"
MenuStyle "WindowList"	ItemFormat "%|%l%p%>%|"
MenuStyle "subMenu"	ItemFormat "%|%l%p%>%|"
#sets the width between items and titles in the menus
MenuStyle "rootMenu"	VerticalItemSpacing 1 1, VerticleTitleSpacing 2 2
MenuStyle "winOpMenu"	VerticalItemSpacing 1 1, VerticleTitleSpacing 2 2
MenuStyle "sendMenu"	VerticalItemSpacing 1 1, VerticleTitleSpacing 2 2
MenuStyle "WindowList"	VerticalItemSpacing 1 1, VerticleTitleSpacing 2 2
#makes the selected menu item and menu title have hilighting instead of 3d impression
MenuStyle "rootMenu"	ActiveFore, HilightBack, HilightTitleBack, Hilight3DOff
MenuStyle "winOpMenu"	ActiveFore, HilightBack, HilightTitleBack, Hilight3DOff
MenuStyle "sendMenu"	ActiveFore, HilightBack, HilightTitleBack, Hilight3DOff
MenuStyle "WindowList"	ActiveFore, HilightBack, HilightTitleBack, Hilight3DOff
MenuStyle "subMenu"	ActiveFore, HilightBack, HilightTitleBack, Hilight3DOff
#primary menu containing all submenus for quick access to common programs
#as well as the ability to restart or exit fvwm
DestroyMenu rootMenu
AddToMenu rootMenu "FVWM2" Title
ChangeMenuStyle rootMenu rootMenu
+ "Utilities"	Popup utilMenu
+ "Internet"	Popup webMenu
+ "Media"	Popup mediaMenu
+ "Games"	Popup gamesMenu
+ "" 		Nop
+ "Flip FVWM" 	Restart
+ "Exit FVWM" 	Quit
#submenu containing internet reliant programs
DestroyMenu webMenu
AddToMenu webMenu
ChangeMenuStyle subMenu webMenu
+ "Firefox"	Exec exec firefox
+ "Discord"	Exec exec discord
+ "Signal"	Exec exec signal-desktop
+ "qBittorrent"	Exec exec qbittorrent
#submenu containing multimedia focused software, and a pulseaudio volume mixer
DestroyMenu mediaMenu
AddToMenu mediaMenu
ChangeMenuStyle subMenu mediaMenu
+ "Video Player"		Exec exec $[fvwm_video_player]
+ "Open Broadcaster Studio"	Exec exec obs
+ "The G.I.M.P"			Exec exec gimp
+ "Shotcut"			Exec exec shotcut
+ "Volume Mixer"		Exec exec pavucontrol
#submenu containing the holy trinity of basic system utilities
DestroyMenu utilMenu
AddToMenu utilMenu
ChangeMenuStyle subMenu utilMenu
+ "Terminal"		Exec exec $[fvwm_term]
+ "Calculator"		Exec exec xcalc
+ "File Manager"	Exec exec pcmanfm
#submenu containing software related to (((gaming)))
DestroyMenu gamesMenu
AddToMenu gamesMenu
ChangeMenuStyle subMenu gamesMenu
+ "Steam"		Exec exec steam
+ "Lutris"		Exec exec lutris
+ "Xonotic"	 	Exec exec xonotic-sdl
+ "Minecraft"		Exec exec minecraft-launcher &
#window options menu with an exhaustive list of options, similar to the
#one found in the default configuration
DestroyMenu winOpMenu
AddToMenu winOpMenu "Window Ops" Title
ChangeMenuStyle winOpMenu winOpMenu
+ "Move"		Move
+ "Resize"		Resize
+ "/De/Iconify"		Iconify
+ "/Un/Maximize"	Maximize
+ "/Un/Shade"		WindowShade
+ "/Un/Stick"		Stick
+ "/No/Titlebar"	Pick (CirculateHit) ToggleTitle
+ "Deliver"		Popup sendMenu
+ ""			Nop
+ "Close"		Close
+ "Destroy"		Destroy
+ ""			Nop
+ "Raise"		Raise
+ "Lower"		Lower
+ ""			Nop
+ "StaysOnTop"		Pick (CirculateHit) Layer 0 6
+ "StausPut"		Pick (CirculateHit) Layer 0 4
+ "StaysOnBottom"	Pick (CirculateHit) Layer 0 2
+ ""			Nop
+ "Identify"		Module FvwmIdent
#submenu for the window operations menu, gives the ability to move windows
#to certain "pages" (workspaces)
DestroyMenu sendMenu
AddToMenu sendMenu
ChangeMenuStyle sendMenu sendMenu
+ "Space 1"		MoveToPage 0 0
+ "Space 2"		MoveToPage 1 0
+ "Space 3"		MoveToPage 2 0
+ "Space 4"		MoveToPage 0 1
+ "Space 5"		MoveToPage 1 1
+ "Space 6"		MoveToPage 2 1
+ "Space 7"		MoveToPage 0 2
+ "Space 8"		MoveToPage 1 2
+ "Space 9"		MoveToPage 2 2

#fvwmpager configuration
#a sane list of default options for any always open tool: removes the ability to
#iconify it, removes it from the window list, removes the ability to move it
#around, makes it a constant between all workspaces, etc, etc. all of these
#options can be reviews in the fvwm manual under the section for the "Style"
#command, which has more arguments than any other command in fvwm.
Style "FvwmPager"	NoTitle, !Handles, Sticky, WindowListSkip, \
	CirculateSkip, StaysOnBottom, FixedPosition, FixedSize, !Iconifiable
DestroyModuleConfig FvwmPager *
*FvwmPager: Geometry 125x125+2+2
*FvwmPager: Colorset * 0
*FvwmPager: HilightColorset * 5
#"balloons" are little boxes of text that display a windows name when you hover
#the cursor over it inside the pager
*FvwmPager: BalloonColorset * 4
*FvwmPager: WindowColorsets 4 5
*FvwmPager: Font "xft:SF Pro Display:style=Semibold Italic:size=10:minspace=True:antialias=True"
*FvwmPager: Balloons All
*FvwmPager: BalloonFont "xft:SF Pro Display:style=Light Italic:size=8:minspace=True:antialias=True"
*FvwmPager: MiniIcons
*FvwmPager: UseSkipList

#clock and system tray using FvwmButtons
#identical list of options to the FvwmPager, as i want it to have all the same
#properties, being a constant toolbar for the environment
Style "sysTray"		NoTitle, !Handles, Sticky, WindowListSkip, \
	CirculateSkip, StaysOnBottom, FixedPosition, FixedSize, !Iconifiable
DestroyModuleConfig sysTray: *
*sysTray: Geometry 125x150+2-2
*sysTray: Colorset 0
#rows and columns are not what you think. all FvwmButtons panels are fractionally
#divided into rows and columns that you should think of like those on a sheet of
#graphing paper. as you can see with the geometry line above, the panel here is
#125 pixels wide, and 150 tall. therefore i have given the panel 6 rows and 5
#columns of squares, which are each 25x25 pixels in size. 
*sysTray: Rows 6
*sysTray: Columns 5
*sysTray: Frame 0
*sysTray: Font "xft:SF Pro Display:style=Light Italic:size=8:minspace=True:antialias=True"
#here, the first object in the panel is an instance of stalonetray to act as our
#system tray. the very first argument in declaring it, 5x1, tells us that the space
#it will occupy graphically in our panel is 5 boxes across, and 1 box down. or, in
#other terms, 5 columns and 1 row of our 25x25 boxes. you can picture it like this:
#5 times 25 is 125, so the stalonetray will be 125 pixels wide. 1 times 25 is 25, so
#the stalonetray will be 25 pixels tall. because its the first object we declare, its
#the first object that appears. Objects are added vertically from the top to panels
#made with FvwmButtons by default.
*sysTray: (5x1, Swallow(NoClose,UseOld) \
	stalonetray 'Exec exec stalonetray --config \
	"/usr/share/default-config/.stalonetrayrc"', Frame 0)
#with our second object being a large square analog clock, i want it to ocupy the
#large remainder of our 5x6 area. therefore our first argument is 5x5. once again,
#you can think of it in terms of our 25x25 pixel sized boxes. 5x25 is 125, and
#therefore our clock is 125x125 pixels in size, and a perfect square. in my opinion,
#this is by far the most elegant, if not slightly convoluted way to build panels.
*sysTray: (5x5, Swallow XClock 'Exec xclock -fg $[xfg] -bg $[xbg] &')

#active window lister using FvwmIconMan
#i hope these Style arguments are starting to look familiar, they're the de-facto
#listing for permanent environment objects. It doesn't have FixedSize because the
#manager actually grows and shrinks depending on the amount of icons it's managing.
Style "FvwmIconMan"	NoTitle, !Handles, Sticky, WindowListSkip, \
	CirculateSkip, StaysOnBottom, FixedPosition, !Iconifiable
DestroyModuleConfig FvwmIconMan: *
#means that objects with the "WindowListSkip" style won't be included.
*FvwmIconMan: UseWinList true
*FvwmIconMan: Resolution global
#Tips will show a little baloon with the full window name in it, the needed
#argument makes it so this only happens for windows whos names are too long to fit
#in the normal box size
*FvwmIconMan: Tips needed
#sorts windows by window id, which is more than sane
*FvwmIconMan: Sort id
#this will set the actual size of the icon manager through setting the size of the buttons
*FvwmIconMan: ButtonGeometry 125x25
#and this will set the amount of rows and columns of said buttons in the iconman
*FvwmIconMan: ManagerGeometry 1x0+2+138
*FvwmIconMan: Colorset 4
*FvwmIconMan: FocusColorset 6
*FvwmIconMan: SelectColorset 5
*FvwmIconMan: FocusAndSelectColorset 5
*FvwmIconMan: IconColorset 4
*FvwmIconMan: IconAndSelectColorset 5
*FvwmIconMan: ReliefThickness 0
*FvwmIconMan: Format "%t"
*FvwmIconMan: Font "xft:SF Pro Display:style=Light Italic:size=10:minspace=True:antialias=True"
#here are a couple of mouse bindings specifically for the iconbox, the first one 
#takes you straight to the window, and deiconifies it if its iconified, the second
#one will activate the sendMenu i defined up there for that window
*FvwmIconMan: Action Mouse 1 A sendcommand WarpToWindow
*FvwmIconMan: Action Mouse 2 A sendcommand "Menu sendMenu"